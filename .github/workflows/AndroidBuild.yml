name: AndroidBuild
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: --health-cmd="curl -f http://localhost:9000 || exit 1" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '18'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
            api-level: 30
            build-tools: 30.0.3

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > ./local.properties

      - name: Wait for SonarQube to be up
        run: |
            echo "Waiting for SonarQube to start..."
            until $(curl --output /dev/null --silent --head --fail http://localhost:9000); do
              printf '.'
              sleep 5
            done
            echo "SonarQube is up and running"
            
      - name: Run lint
        run: ./gradlew ktlintFormat lint detekt ktlintCheck

#      - name: Run unit tests, jacoco
#        run: ./gradlew test jacocoTestReport

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000
          SONAR_PROJECT_KEY: KotlinCICDPractice
          SONAR_ORGANIZATION: KotlinCICDPractice
          SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.login=318109bb61c534e7a847069ad286b3845dd5b0fb

#      - name: Build with Gradle
#        run: ./gradlew build

#      - name: Upload a Build Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: KotlinCICD.apk
#          path: app/build/outputs/apk/debug/app-debug.apk

